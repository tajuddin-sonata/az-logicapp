pipeline {
    agent {
        label 'GCP-jenkins-worker04'
    }

    parameters{
        choice(name: 'ENVIRONMENT', choices:[
            'dev',
            'staging',
            'prod'],
            description: 'Choose which environment to deploy to.')
        
        string(name: 'VERSION', description: 'Explicit version to deploy (i.e., "v0.1-51-g87b72a"). Leave blank to build latest commit')


        string(name: 'CONFIGURE_FUNCTIONAPP_NAME', defaultValue: 'dev-jenkins-wf-configure', description: '''The name of FunctionApp 
            dev-jenkins-wf-configure
            stg-jenkins-wf-transcode
            prd-jenkins-wf-transcribe
            ''' )

        string(name: 'TRANSCODE_FUNCTIONAPP_NAME', defaultValue: 'dev-jenkins-wf-transcode', description: '''The name of FunctionApp 
            dev-jenkins-wf-transcode
            stg-jenkins-wf-transcode
            prd-jenkins-wf-transcode
            ''' )

        string(name: 'TRANSCRIBE_FUNCTIONAPP_NAME', defaultValue: 'dev-jenkins-wf-transcribe', description: '''The name of FunctionApp 
            dev-jenkins-wf-transcribe
            stg-jenkins-wf-transcode
            prd-jenkins-wf-transcribe
            ''' )

        string(name: 'ANALYSE_FUNCTIONAPP_NAME', defaultValue: 'dev-jenkins-wf-analyse', description: '''The name of FunctionApp 
            dev-jenkins-wf-analyse
            stg-jenkins-wf-analyse
            prd-jenkins-wf-analyse
            ''' )

        string(name: 'REDACT_FUNCTIONAPP_NAME', defaultValue: 'dev-jenkins-wf-redact', description: '''The name of FunctionApp 
            dev-jenkins-wf-redact
            stg-jenkins-wf-redact
            prd-jenkins-wf-redact
            ''' )
        
        string(name: 'AZURE_LOGICAPP_NAME', defaultValue:'dev-jenkins-logicapp', description: '''The name of LogicApp to deploy
            dev-jenkins-logic-app
            jenkins-logic-app''' )

        string(name: 'SUBSCRIPTION', defaultValue:'48986b2e-5349-4fab-a6e8-d5f02072a4b8', description: ''' select subscription as:
            48986b2e-5349-4fab-a6e8-d5f02072a4b8
            34b1c36e-d8e8-4bd5-a6f3-2f92a1c0626e
            70c3af66-8434-419b-b808-0b3c0c4b1a04''')
    }

    environment {
        AZURE_CLIENT_ID = credentials("az_cca_${params.ENVIRONMENT}_client_id")
        AZURE_CLIENT_SECRET = credentials("az_cca_${params.ENVIRONMENT}_secret_value")
        AZURE_TENANT_ID = credentials("az_cca_${params.ENVIRONMENT}_tenant_id")
        
    }

    stages {
        stage('Checkout') {
            steps {
                // checkout scm
                git branch: 'main', url: 'https://github.com/tajuddin-sonata/logicapp.git'

            }
        }

        stage ('replace variable in code') {
            steps {
                script {
                    sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID'
                    sh "az account set --subscription ${params.SUBSCRIPTION}"
                    
                    def configure_func_url = sh(script: "func azure functionapp list-functions ${params.CONFIGURE_FUNCTIONAPP_NAME} --show-keys | awk '/Invoke url:/ {print \$3}'", returnStdout: true).trim()
                    echo "configure_func_url: ${configure_func_url}"

                    def transcode_func_url = sh(script: "func azure functionapp list-functions ${params.TRANSCODE_FUNCTIONAPP_NAME} --show-keys | awk '/Invoke url:/ {print \$3}'", returnStdout: true).trim()
                    echo "transcode_func_url: ${transcode_func_url}"
                    
                    def transcribe_func_url = sh(script: "func azure functionapp list-functions ${params.TRANSCRIBE_FUNCTIONAPP_NAME} --show-keys | awk '/Invoke url:/ {print \$3}'", returnStdout: true).trim()
                    echo "transcribe_func_url: ${transcribe_func_url}"
                    
                    def analyse_func_url = sh(script: "func azure functionapp list-functions ${params.ANALYSE_FUNCTIONAPP_NAME} --show-keys | awk '/Invoke url:/ {print \$3}'", returnStdout: true).trim()
                    echo "analyse_func_url: ${analyse_func_url}"
                    
                    def redact_func_url = sh(script: "func azure functionapp list-functions ${params.REDACT_FUNCTIONAPP_NAME} --show-keys | awk '/Invoke url:/ {print \$3}'", returnStdout: true).trim()
                    echo "redact_func_url: ${redact_func_url}"
                    
                    sh """
                        cd src/workflow1/
                        sed -i 's|\$CONFIGURE_FUNC_URL|${configure_func_url}|g' workflow.json
                        sed -i 's|\$TRANSCODE_FUNC_URL|${transcode_func_url}|g' workflow.json
                        sed -i 's|\$TRANSCRIBE_FUNC_URL|${transcribe_func_url}|g' workflow.json
                        sed -i 's|\$ANALYSE_FUNC_URL|${analyse_func_url}|g' workflow.json
                        sed -i 's|\$REDACT_FUNC_URL|${redact_func_url}|g' workflow.json

                    """
                }
            }
        }

        stage('Deploy artifact to Nexus & LogicApp') {
            steps {
                script {
                    echo "Deploy artifact to Nexus"
                    def ver = params.VERSION
                    sh """
                        #!/bin/bash
                
                        if [ -z "$ver" ]; then
                            artifact_version=\$(git describe --tags)
                            echo "\${artifact_version}" > src/version.txt
                            cd src/
                            zip -r "../$FILE_PREFIX-logicapp-\${artifact_version}.zip" *
                            cd $WORKSPACE
                            echo "CREATED [$FILE_PREFIX-logicapp-\${artifact_version}.zip]"
                            curl -v -u nexus-user:nexus@123 --upload-file \
                                "$FILE_PREFIX-logicapp-\${artifact_version}.zip" \
                                "http://40.71.34.146:8081/repository/packages/cca/$FILE_PREFIX-logicapp-\${artifact_version}.zip"
                        else
                            artifact_version=$ver
                            echo "Downloading specified artifact version from Nexus..."
                            curl -v -u nexus-user:nexus@123 -O "http://40.71.34.146:8081/repository/packages/cca/$FILE_PREFIX-logicapp-\${artifact_version}.zip"
                        fi
                        rm -rf "$FILE_PREFIX-logicapp-\${artifact_version}"
                        unzip "$FILE_PREFIX-logicapp-\${artifact_version}.zip" -d "$FILE_PREFIX-logicapp-\${artifact_version}"

                        ls -ltr
                        az logicapp deployment source config-zip -g ${params.RESOURCE_GROUP_NAME} -n ${params.AZURE_LOGICAPP_NAME} --subscription ${params.SUBSCRIPTION} --src $FILE_PREFIX-logicapp-\${artifact_version}.zip
                    """
                }
            }
        }

    }
}
